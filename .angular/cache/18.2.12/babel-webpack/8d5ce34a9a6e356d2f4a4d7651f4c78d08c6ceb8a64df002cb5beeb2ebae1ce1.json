{"ast":null,"code":"var _RecipeScreenPageModule;\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RecipeScreenPageRoutingModule } from './recipe-screen-routing.module';\nimport { RecipeScreenPage } from './recipe-screen.page';\nimport * as i0 from \"@angular/core\";\nexport class RecipeScreenPageModule {}\n_RecipeScreenPageModule = RecipeScreenPageModule;\n_RecipeScreenPageModule.ɵfac = function RecipeScreenPageModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _RecipeScreenPageModule)();\n};\n_RecipeScreenPageModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _RecipeScreenPageModule\n});\n_RecipeScreenPageModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [CommonModule, FormsModule, IonicModule, RecipeScreenPageRoutingModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(RecipeScreenPageModule, {\n    declarations: [RecipeScreenPage],\n    imports: [CommonModule, FormsModule, IonicModule, RecipeScreenPageRoutingModule]\n  });\n})();\nexport const routes = [{\n  path: '',\n  redirectTo: 'add-recipe1',\n  pathMatch: 'full'\n}, {\n  path: 'add-recipe1',\n  loadChildren: () => import('./pages/add-recipe1/add-recipe1.module').then(m => m.AddRecipe1PageModule)\n}, {\n  path: 'explore',\n  loadChildren: () => import('./pages/explore/explore.module').then(m => m.ExplorePageModule)\n}, {\n  path: 'recipe-screen',\n  loadChildren: () => import('./recipe-screen/recipe-screen.module').then(m => m.RecipeScreenPageModule)\n}];","map":{"version":3,"names":["CommonModule","FormsModule","IonicModule","RecipeScreenPageRoutingModule","RecipeScreenPage","RecipeScreenPageModule","declarations","imports","routes","path","redirectTo","pathMatch","loadChildren","then","m","AddRecipe1PageModule","ExplorePageModule"],"sources":["C:\\Users\\pavit\\Forkfull3\\src\\app\\pages\\recipe-screen\\recipe-screen.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RecipeScreenPageRoutingModule } from './recipe-screen-routing.module';\r\n\r\nimport { RecipeScreenPage } from './recipe-screen.page';\r\nimport { Routes } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RecipeScreenPageRoutingModule\r\n  ],\r\n  declarations: [RecipeScreenPage]\r\n})\r\nexport class RecipeScreenPageModule {}\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'add-recipe1',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'add-recipe1',\r\n    loadChildren: () => import('./pages/add-recipe1/add-recipe1.module').then(m => m.AddRecipe1PageModule)\r\n  },\r\n  {\r\n    path: 'explore',\r\n    loadChildren: () => import('./pages/explore/explore.module').then(m => m.ExplorePageModule)\r\n  },\r\n  {\r\n    path: 'recipe-screen',\r\n    loadChildren: () => import('./recipe-screen/recipe-screen.module').then(m => m.RecipeScreenPageModule)\r\n  },\r\n];\r\n"],"mappings":";AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,6BAA6B,QAAQ,gCAAgC;AAE9E,SAASC,gBAAgB,QAAQ,sBAAsB;;AAYvD,OAAM,MAAOC,sBAAsB;0BAAtBA,sBAAsB;;mCAAtBA,uBAAsB;AAAA;;QAAtBA;AAAsB;;YAP/BL,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,6BAA6B;AAAA;;2EAIpBE,sBAAsB;IAAAC,YAAA,GAFlBF,gBAAgB;IAAAG,OAAA,GAL7BP,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,6BAA6B;EAAA;AAAA;AAMjC,OAAO,MAAMK,MAAM,GAAW,CAC5B;EACEC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,aAAa;EACzBC,SAAS,EAAE;CACZ,EACD;EACEF,IAAI,EAAE,aAAa;EACnBG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,wCAAwC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,oBAAoB;CACtG,EACD;EACEN,IAAI,EAAE,SAAS;EACfG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,iBAAiB;CAC3F,EACD;EACEP,IAAI,EAAE,eAAe;EACrBG,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,sCAAsC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACT,sBAAsB;CACtG,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}