{"ast":null,"code":"var _AppRoutingModule;\nimport { PreloadAllModules, RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'tabs',\n  component: TabsPage,\n  children: [{\n    path: 'tab1',\n    children: [{\n      path: '',\n      loadChildren: () => import('../tab1/tab1.module').then(m => m.Tab1PageModule)\n    }]\n  }, {\n    path: 'tab2',\n    children: [{\n      path: '',\n      loadChildren: () => import('../tab1/tab1view.module').then(m => m.Tab1ViewPageModule)\n    }]\n  }, {\n    path: 'tab3',\n    children: [{\n      path: '',\n      loadChildren: () => import('./pages/add-recipe1/add-recipe1.module').then(m => m.Tab2PageModule)\n    }]\n  }, {\n    path: 'tab4',\n    children: [{\n      path: '',\n      loadChildren: () => import('../tab3/tab3.module').then(m => m.Tab3PageModule)\n    }]\n  }, {\n    path: 'tab5',\n    children: [{\n      path: '',\n      loadChildren: () => import('../tab3/tab3.module').then(m => m.Tab3PageModule)\n    }]\n  }]\n}, {\n  path: '',\n  redirectTo: '/tabs/tab1',\n  pathMatch: 'full'\n}, path, '', redirectTo, 'add-recipe1', pathMatch, 'full'];\n{\n  path: 'add-recipe1', loadChildren;\n  () => import('./pages/add-recipe1/add-recipe1.module').then(m => m.AddRecipe1PageModule);\n}\n{\n  path: 'explore', loadChildren;\n  () => import('./pages/explore/explore.module').then(m => m.ExplorePageModule);\n}\n;\nexport class AppRoutingModule {}\n_AppRoutingModule = AppRoutingModule;\n_AppRoutingModule.ɵfac = function AppRoutingModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _AppRoutingModule)();\n};\n_AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _AppRoutingModule\n});\n_AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadAllModules\n  }), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["PreloadAllModules","RouterModule","routes","path","component","TabsPage","children","loadChildren","then","m","Tab1PageModule","Tab1ViewPageModule","Tab2PageModule","Tab3PageModule","redirectTo","pathMatch","AddRecipe1PageModule","ExplorePageModule","AppRoutingModule","forRoot","preloadingStrategy","imports","i1","exports"],"sources":["C:\\Users\\pavit\\Forkfull3\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'tab1',\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('../tab1/tab1.module').then((m) => m.Tab1PageModule),\n          },\n        ],\n      },\n      {\n        path: 'tab2',\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('../tab1/tab1view.module').then((m) => m.Tab1ViewPageModule),\n          },\n        ],\n      },\n      {\n        path: 'tab3',\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('./pages/add-recipe1/add-recipe1.module').then((m) => m.Tab2PageModule),\n          },\n        ],\n      },\n      {\n        path: 'tab4',\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('../tab3/tab3.module').then((m) => m.Tab3PageModule),\n          },\n        ],\n      },\n      {\n        path: 'tab5',\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('../tab3/tab3.module').then((m) => m.Tab3PageModule),\n          },\n        ],\n      }\n    ],\n  },\n\n  {\n    path: '',\n    redirectTo: '/tabs/tab1',\n    pathMatch: 'full',\n  },\n\n    path: '',\n    redirectTo: 'add-recipe1',\n    pathMatch: 'full'\n  },\n  {\n    path: 'add-recipe1',\n    loadChildren: () => import('./pages/add-recipe1/add-recipe1.module').then( m => m.AddRecipe1PageModule)\n  },\n  {\n    path: 'explore',\n    loadChildren: () => import('./pages/explore/explore.module').then( m => m.ExplorePageModule)\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"],"mappings":";AACA,SAASA,iBAAiB,EAAEC,YAAY,QAAgB,iBAAiB;;;AAEzE,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEC,QAAQ;EACnBC,QAAQ,EAAE,CACR;IACEH,IAAI,EAAE,MAAM;IACZG,QAAQ,EAAE,CACR;MACEH,IAAI,EAAE,EAAE;MACRI,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,cAAc;KAC/E;GAEJ,EACD;IACEP,IAAI,EAAE,MAAM;IACZG,QAAQ,EAAE,CACR;MACEH,IAAI,EAAE,EAAE;MACRI,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,yBAAyB,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACE,kBAAkB;KACvF;GAEJ,EACD;IACER,IAAI,EAAE,MAAM;IACZG,QAAQ,EAAE,CACR;MACEH,IAAI,EAAE,EAAE;MACRI,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,wCAAwC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACG,cAAc;KAClG;GAEJ,EACD;IACET,IAAI,EAAE,MAAM;IACZG,QAAQ,EAAE,CACR;MACEH,IAAI,EAAE,EAAE;MACRI,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACI,cAAc;KAC/E;GAEJ,EACD;IACEV,IAAI,EAAE,MAAM;IACZG,QAAQ,EAAE,CACR;MACEH,IAAI,EAAE,EAAE;MACRI,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACI,cAAc;KAC/E;GAEJ;CAEJ,EAED;EACEV,IAAI,EAAE,EAAE;EACRW,UAAU,EAAE,YAAY;EACxBC,SAAS,EAAE;CACZ,EAECZ,IAAI,EAAE,EAAE,EACRW,UAAU,EAAE,aAAa,EACzBC,SAAS,EAAE,MAAM;AAEnB;EACEZ,IAAI,EAAE,aAAa,EACnBI,YAAY;EAAE,MAAM,MAAM,CAAC,wCAAwC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAIA,CAAC,CAACO,oBAAoB,CAAC;AACzG;AACA;EACEb,IAAI,EAAE,SAAS,EACfI,YAAY;EAAE,MAAM,MAAM,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAIA,CAAC,CAACQ,iBAAiB,CAAC;AAC9F;AACD;AAQD,OAAM,MAAOC,gBAAgB;oBAAhBA,gBAAgB;;mCAAhBA,iBAAgB;AAAA;;QAAhBA;AAAgB;;YAJzBjB,YAAY,CAACkB,OAAO,CAACjB,MAAM,EAAE;IAAEkB,kBAAkB,EAAEpB;EAAiB,CAAE,CAAC,EAE/DC,YAAY;AAAA;;2EAEXiB,gBAAgB;IAAAG,OAAA,GAAAC,EAAA,CAAArB,YAAA;IAAAsB,OAAA,GAFjBtB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}